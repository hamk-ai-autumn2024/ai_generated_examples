"""
Flask Concepts Explained
========================

This script explains Flask concepts without requiring Flask to be installed.
It's designed to help you understand how Flask works before you install it.

Run this script with: python flask_concepts_explained.py
"""

def explain_flask():
    """Explain Flask concepts in a structured way"""
    
    print("=" * 60)
    print("FLASK CONCEPTS EXPLAINED")
    print("=" * 60)
    print()
    
    # 1. What is Flask?
    print("1. WHAT IS FLASK?")
    print("-" * 20)
    print("Flask is a micro web framework for Python.")
    print("It's called 'micro' because it doesn't require particular tools or libraries.")
    print()
    
    # 2. Basic Application Structure
    print("2. BASIC APPLICATION STRUCTURE")
    print("-" * 30)
    print("A minimal Flask application looks like this:")
    print()
    print("```python")
    print("from flask import Flask")
    print()
    print("app = Flask(__name__)")
    print()
    print("@app.route('/')")
    print("def hello():")
    print("    return 'Hello, World!'")
    print()
    print("if __name__ == '__main__':")
    print("    app.run()")
    print("```")
    print()
    
    # 3. Routing
    print("3. ROUTING")
    print("-" * 10)
    print("Routing maps URLs to functions:")
    print()
    print("```python")
    print("@app.route('/')")
    print("def home():")
    print("    return 'Home Page'")
    print()
    print("@app.route('/about')")
    print("def about():")
    print("    return 'About Page'")
    print()
    print("@app.route('/user/<username>')  # Dynamic route")
    print("def user(username):")
    print("    return f'Hello, {username}!'")
    print("```")
    print()
    
    # 4. Templates
    print("4. TEMPLATES")
    print("-" * 12)
    print("Templates separate HTML from Python code using Jinja2:")
    print()
    print("Python code:")
    print("```python")
    print("from flask import render_template")
    print()
    print("@app.route('/')")
    print("def home():")
    print("    return render_template('index.html', title='Home', name='User')")
    print("```")
    print()
    print("Template (templates/index.html):")
    print("```html")
    print("<!DOCTYPE html>")
    print("<html>")
    print("<head>")
    print("    <title>{{ title }}</title>")
    print("</head>")
    print("<body>")
    print("    <h1>Hello, {{ name }}!</h1>")
    print("</body>")
    print("</html>")
    print("```")
    print()
    
    # 5. Template Inheritance
    print("5. TEMPLATE INHERITANCE")
    print("-" * 22)
    print("Base template (templates/base.html):")
    print("```html")
    print("<!DOCTYPE html>")
    print("<html>")
    print("<head>")
    print("    <title>{% block title %}My App{% endblock %}</title>")
    print("</head>")
    print("<body>")
    print("    <nav>Navigation links...</nav>")
    print("    {% block content %}{% endblock %}")
    print("</body>")
    print("</html>")
    print("```")
    print()
    print("Child template (templates/home.html):")
    print("```html")
    print("{% extends 'base.html' %}")
    print()
    print("{% block title %}Home - My App{% endblock %}")
    print()
    print("{% block content %}")
    print("<h1>Welcome to My App</h1>")
    print("<p>This is the home page.</p>")
    print("{% endblock %}")
    print("```")
    print()
    
    # 6. Form Handling
    print("6. FORM HANDLING")
    print("-" * 16)
    print("HTML form (templates/contact.html):")
    print("```html")
    print("<form method='POST'>")
    print("    <input type='text' name='name' required>")
    print("    <input type='email' name='email' required>")
    print("    <button type='submit'>Send</button>")
    print("</form>")
    print("```")
    print()
    print("Python code:")
    print("```python")
    print("from flask import request, redirect")
    print()
    print("@app.route('/contact', methods=['GET', 'POST'])")
    print("def contact():")
    print("    if request.method == 'POST':")
    print("        name = request.form['name']")
    print("        email = request.form['email']")
    print("        # Process the data")
    print("        return redirect('/thank-you')")
    print("    return render_template('contact.html')")
    print("```")
    print()
    
    # 7. Project Structure
    print("7. TYPICAL PROJECT STRUCTURE")
    print("-" * 26)
    print("flask_app/")
    print("│")
    print("├── app.py              # Main application file")
    print("├── config.py           # Configuration settings")
    print("├── requirements.txt     # Dependencies")
    print("├── templates/          # HTML templates")
    print("│   ├── base.html")
    print("│   ├── index.html")
    print("│   └── ...")
    print("├── static/             # CSS, JS, images")
    print("│   ├── css/")
    print("│   ├── js/")
    print("│   └── images/")
    print("└── models/             # Database models")
    print("    └── ...")
    print()
    
    # 8. Next Steps
    print("8. NEXT STEPS")
    print("-" * 12)
    print("1. Install Flask: pip install Flask")
    print("2. Try the example application in this repository")
    print("3. Create your own Flask projects")
    print("4. Explore Flask extensions for additional functionality")
    print()
    
    print("=" * 60)
    print("END OF FLASK CONCEPTS EXPLANATION")
    print("=" * 60)

if __name__ == "__main__":
    explain_flask()
